<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Store' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range granularity='1' max='50' min='1' />
      </column>
    </datasource>
    <datasource caption='Custom SQL Query (sqlproject)' inline='true' name='federated.01p3rpj0tzatvz167rr9y0bvnmev' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-3QAMQ19\SQLEXPRESS' name='sqlserver.1eajc3c1lthkxw10budyw0uah084'>
            <connection authentication='sspi' class='sqlserver' dbname='sqlproject' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-3QAMQ19\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1eajc3c1lthkxw10budyw0uah084' name='Custom SQL Query' type='text'>SELECT ST.Store_id,Store_name,SUM(units * Product_price) AS &apos;total_revenue&apos;,&#13;
SUM((Product_price - Product_cost) * units) AS &apos;total_profit&apos;&#13;
FROM stores ST&#13;
INNER JOIN Sales S &#13;
ON ST.Store_id = S.store_id&#13;
INNER JOIN Product P &#13;
ON S.product_id = P.Product_id&#13;
GROUP BY ST.Store_id, Store_name</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1eajc3c1lthkxw10budyw0uah084' name='Custom SQL Query' type='text'>SELECT ST.Store_id,Store_name,SUM(units * Product_price) AS &apos;total_revenue&apos;,&#13;
SUM((Product_price - Product_cost) * units) AS &apos;total_profit&apos;&#13;
FROM stores ST&#13;
INNER JOIN Sales S &#13;
ON ST.Store_id = S.store_id&#13;
INNER JOIN Product P &#13;
ON S.product_id = P.Product_id&#13;
GROUP BY ST.Store_id, Store_name</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Store_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Store_id]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Store_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_26B385CCDA0B45D7AD47904E2CD06BE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Store_name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Store_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_26B385CCDA0B45D7AD47904E2CD06BE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_revenue</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_revenue]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_revenue</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_26B385CCDA0B45D7AD47904E2CD06BE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_profit</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_profit]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_profit</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_26B385CCDA0B45D7AD47904E2CD06BE4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Store' datatype='table' name='[__tableau_internal_object_id__].[_26B385CCDA0B45D7AD47904E2CD06BE4]' role='measure' type='quantitative' />
      <column datatype='real' name='[total_profit]' role='measure' type='quantitative' />
      <column datatype='real' name='[total_revenue]' role='measure' type='quantitative' />
      <column-instance column='[total_profit]' derivation='Sum' name='[sum:total_profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_revenue]' derivation='Sum' name='[sum:total_revenue:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.642857' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.357143' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01p3rpj0tzatvz167rr9y0bvnmev].[sum:total_profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01p3rpj0tzatvz167rr9y0bvnmev].[sum:total_revenue:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Store' id='_26B385CCDA0B45D7AD47904E2CD06BE4'>
            <properties context=''>
              <relation connection='sqlserver.1eajc3c1lthkxw10budyw0uah084' name='Custom SQL Query' type='text'>SELECT ST.Store_id,Store_name,SUM(units * Product_price) AS &apos;total_revenue&apos;,&#13;
SUM((Product_price - Product_cost) * units) AS &apos;total_profit&apos;&#13;
FROM stores ST&#13;
INNER JOIN Sales S &#13;
ON ST.Store_id = S.store_id&#13;
INNER JOIN Product P &#13;
ON S.product_id = P.Product_id&#13;
GROUP BY ST.Store_id, Store_name</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='16'>Top &lt;</run>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='16'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='16'>&gt; Store Performance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (sqlproject)' name='federated.01p3rpj0tzatvz167rr9y0bvnmev' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Store' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='1' max='50' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01p3rpj0tzatvz167rr9y0bvnmev'>
            <column datatype='string' name='[Store_name]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Store' datatype='table' name='[__tableau_internal_object_id__].[_26B385CCDA0B45D7AD47904E2CD06BE4]' role='measure' type='quantitative' />
            <column-instance column='[Store_name]' derivation='None' name='[none:Store_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_profit]' derivation='Sum' name='[sum:total_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_revenue]' derivation='Sum' name='[sum:total_revenue:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_revenue]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01p3rpj0tzatvz167rr9y0bvnmev].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01p3rpj0tzatvz167rr9y0bvnmev].[sum:total_revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01p3rpj0tzatvz167rr9y0bvnmev].[sum:total_profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.01p3rpj0tzatvz167rr9y0bvnmev].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01p3rpj0tzatvz167rr9y0bvnmev].[sum:total_revenue:qk]&quot;</bucket>
              <bucket>&quot;[federated.01p3rpj0tzatvz167rr9y0bvnmev].[sum:total_profit:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.01p3rpj0tzatvz167rr9y0bvnmev].[none:Store_name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[_26B385CCDA0B45D7AD47904E2CD06BE4])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Store_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.01p3rpj0tzatvz167rr9y0bvnmev].[none:Store_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot; Toys Ciudad de Mexico 2&quot;</bucket>
              <bucket>&quot; Toys Guadalajara 3&quot;</bucket>
              <bucket>&quot; Toys Ciudad de Mexico 1&quot;</bucket>
              <bucket>&quot; Toys Toluca 1&quot;</bucket>
              <bucket>&quot; Toys Monterrey 2&quot;</bucket>
              <bucket>&quot; Toys Guadalajara 4&quot;</bucket>
              <bucket>&quot; Toys Hermosillo 3&quot;</bucket>
              <bucket>&quot; Toys Xalapa 2&quot;</bucket>
              <bucket>&quot; Toys Ciudad de Mexico 3&quot;</bucket>
              <bucket>&quot; Toys Saltillo 1&quot;</bucket>
              <bucket>&quot; Toys Ciudad de Mexico 4&quot;</bucket>
              <bucket>&quot; Toys Hermosillo 2&quot;</bucket>
              <bucket>&quot; Toys Monterrey 4&quot;</bucket>
              <bucket>&quot; Toys Guanajuato 1&quot;</bucket>
              <bucket>&quot; Toys Campeche 1&quot;</bucket>
              <bucket>&quot; Toys Mexicali 1&quot;</bucket>
              <bucket>&quot; Toys Ciudad Victoria 1&quot;</bucket>
              <bucket>&quot; Toys Monterrey 3&quot;</bucket>
              <bucket>&quot; Toys Mexicali 2&quot;</bucket>
              <bucket>&quot; Toys Morelia 1&quot;</bucket>
              <bucket>&quot; Toys Guanajuato 2&quot;</bucket>
              <bucket>&quot; Toys Puebla 2&quot;</bucket>
              <bucket>&quot; Toys Monterrey 1&quot;</bucket>
              <bucket>&quot; Toys Santiago 1&quot;</bucket>
              <bucket>&quot; Toys Puebla 3&quot;</bucket>
              <bucket>&quot; Toys Chihuahua 2&quot;</bucket>
              <bucket>&quot; Toys Guanajuato 3&quot;</bucket>
              <bucket>&quot; Toys Xalapa 1&quot;</bucket>
              <bucket>&quot; Toys Guadalajara 2&quot;</bucket>
              <bucket>&quot; Toys Puebla 1&quot;</bucket>
              <bucket>&quot; Toys Villahermosa 1&quot;</bucket>
              <bucket>&quot; Toys San Luis Potosi 1&quot;</bucket>
              <bucket>&quot; Toys Guadalajara 1&quot;</bucket>
              <bucket>&quot; Toys Chetumal 1&quot;</bucket>
              <bucket>&quot; Toys Saltillo 2&quot;</bucket>
              <bucket>&quot; Toys Chihuahua 1&quot;</bucket>
              <bucket>&quot; Toys Culiacan 1&quot;</bucket>
              <bucket>&quot; Toys Hermosillo 1&quot;</bucket>
              <bucket>&quot; Toys Chilpancingo 1&quot;</bucket>
              <bucket>&quot; Toys Aguascalientes 1&quot;</bucket>
              <bucket>&quot; Toys Oaxaca 1&quot;</bucket>
              <bucket>&quot; Toys Pachuca 1&quot;</bucket>
              <bucket>&quot; Toys Merida 1&quot;</bucket>
              <bucket>&quot; Toys Tuxtla Gutierrez 1&quot;</bucket>
              <bucket>&quot; Toys Zacatecas 1&quot;</bucket>
              <bucket>&quot; Toys Durango 1&quot;</bucket>
              <bucket>&quot; Toys Toluca 2&quot;</bucket>
              <bucket>&quot; Toys Cuernavaca 1&quot;</bucket>
              <bucket>&quot; Toys La Paz 1&quot;</bucket>
              <bucket>&quot; Toys Campeche 2&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.01p3rpj0tzatvz167rr9y0bvnmev].[:Measure Names]</column>
            <column>[federated.01p3rpj0tzatvz167rr9y0bvnmev].[none:Store_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.01p3rpj0tzatvz167rr9y0bvnmev].[Multiple Values]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01p3rpj0tzatvz167rr9y0bvnmev].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01p3rpj0tzatvz167rr9y0bvnmev].[none:Store_name:nk] / [federated.01p3rpj0tzatvz167rr9y0bvnmev].[:Measure Names])</rows>
        <cols>[federated.01p3rpj0tzatvz167rr9y0bvnmev].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{C5D48C09-4A4D-40BE-9548-8223677D3168}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01p3rpj0tzatvz167rr9y0bvnmev].[:Measure Names]</field>
            <field>[federated.01p3rpj0tzatvz167rr9y0bvnmev].[none:Store_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91AED806-5334-495C-AD14-6B145525CE2B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
