<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='No. of Product' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range granularity='1' max='30' min='1' />
      </column>
    </datasource>
    <datasource caption='Custom SQL Query (sqlproject)' inline='true' name='federated.1v1oft211b9chg1dpyw5p1g04u9d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-3QAMQ19\SQLEXPRESS' name='sqlserver.02d9tpd0ppn8rv158z2ec1gn8jdz'>
            <connection authentication='sspi' class='sqlserver' dbname='sqlproject' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-3QAMQ19\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.02d9tpd0ppn8rv158z2ec1gn8jdz' name='Custom SQL Query' type='text'>SELECT P.Product_id,Product_name,SUM(units) AS total_units_sold,SUM(units * P.Product_price) AS total_sales,&#13;
SUM((Product_price - Product_cost) * units) AS total_profit&#13;
FROM Product P&#13;
INNER JOIN Sales S ON P.Product_id = S.product_id&#13;
GROUP BY P.Product_id, P.Product_name</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.02d9tpd0ppn8rv158z2ec1gn8jdz' name='Custom SQL Query' type='text'>SELECT P.Product_id,Product_name,SUM(units) AS total_units_sold,SUM(units * P.Product_price) AS total_sales,&#13;
SUM((Product_price - Product_cost) * units) AS total_profit&#13;
FROM Product P&#13;
INNER JOIN Sales S ON P.Product_id = S.product_id&#13;
GROUP BY P.Product_id, P.Product_name</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Product_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product_id]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Product_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_2C4D0A02DD8843A299CA2737924DBAF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product_name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Product_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_2C4D0A02DD8843A299CA2737924DBAF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_units_sold</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_units_sold]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_units_sold</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_2C4D0A02DD8843A299CA2737924DBAF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_sales</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_sales]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_2C4D0A02DD8843A299CA2737924DBAF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_profit</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_profit]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_profit</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_2C4D0A02DD8843A299CA2737924DBAF3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='top product' datatype='table' name='[__tableau_internal_object_id__].[_2C4D0A02DD8843A299CA2737924DBAF3]' role='measure' type='quantitative' />
      <column datatype='real' name='[total_profit]' role='measure' type='quantitative' />
      <column datatype='real' name='[total_sales]' role='measure' type='quantitative' />
      <column datatype='integer' name='[total_units_sold]' role='measure' type='quantitative' />
      <column-instance column='[total_profit]' derivation='Sum' name='[sum:total_profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_sales]' derivation='Sum' name='[sum:total_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_units_sold]' derivation='Sum' name='[sum:total_units_sold:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1v1oft211b9chg1dpyw5p1g04u9d].[sum:total_profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1v1oft211b9chg1dpyw5p1g04u9d].[sum:total_units_sold:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v1oft211b9chg1dpyw5p1g04u9d].[sum:total_sales:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='top product' id='_2C4D0A02DD8843A299CA2737924DBAF3'>
            <properties context=''>
              <relation connection='sqlserver.02d9tpd0ppn8rv158z2ec1gn8jdz' name='Custom SQL Query' type='text'>SELECT P.Product_id,Product_name,SUM(units) AS total_units_sold,SUM(units * P.Product_price) AS total_sales,&#13;
SUM((Product_price - Product_cost) * units) AS total_profit&#13;
FROM Product P&#13;
INNER JOIN Sales S ON P.Product_id = S.product_id&#13;
GROUP BY P.Product_id, P.Product_name</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='16'> Top-&lt;</run>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='16'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='16'>&gt; Performing Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (sqlproject)' name='federated.1v1oft211b9chg1dpyw5p1g04u9d' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='No. of Product' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='1' max='30' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v1oft211b9chg1dpyw5p1g04u9d'>
            <column datatype='string' name='[Product_name]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='top product' datatype='table' name='[__tableau_internal_object_id__].[_2C4D0A02DD8843A299CA2737924DBAF3]' role='measure' type='quantitative' />
            <column-instance column='[Product_name]' derivation='None' name='[none:Product_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_profit]' derivation='Sum' name='[sum:total_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sales]' derivation='Sum' name='[sum:total_sales:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_sales]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v1oft211b9chg1dpyw5p1g04u9d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v1oft211b9chg1dpyw5p1g04u9d].[sum:total_sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v1oft211b9chg1dpyw5p1g04u9d].[sum:total_profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1v1oft211b9chg1dpyw5p1g04u9d].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1v1oft211b9chg1dpyw5p1g04u9d].[sum:total_sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v1oft211b9chg1dpyw5p1g04u9d].[sum:total_profit:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1v1oft211b9chg1dpyw5p1g04u9d].[none:Product_name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[_2C4D0A02DD8843A299CA2737924DBAF3])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Product_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1v1oft211b9chg1dpyw5p1g04u9d].[none:Product_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Lego Bricks&quot;</bucket>
              <bucket>&quot;Colorbuds&quot;</bucket>
              <bucket>&quot;Action Figure&quot;</bucket>
              <bucket>&quot;Magic Sand&quot;</bucket>
              <bucket>&quot;Rubik&apos;s Cube&quot;</bucket>
              <bucket>&quot;Deck Of Cards&quot;</bucket>
              <bucket>&quot;Nerf Gun&quot;</bucket>
              <bucket>&quot;Kids Makeup Kit&quot;</bucket>
              <bucket>&quot;Dart Gun&quot;</bucket>
              <bucket>&quot;Animal Figures&quot;</bucket>
              <bucket>&quot;Splash Balls&quot;</bucket>
              <bucket>&quot;Glass Marbles&quot;</bucket>
              <bucket>&quot;Dinosaur Figures&quot;</bucket>
              <bucket>&quot;Barrel O&apos; Slime&quot;</bucket>
              <bucket>&quot;Gamer Headphones&quot;</bucket>
              <bucket>&quot;Dino Egg&quot;</bucket>
              <bucket>&quot;Mini Ping Pong Set&quot;</bucket>
              <bucket>&quot;PlayDoh Can&quot;</bucket>
              <bucket>&quot;Etch A Sketch&quot;</bucket>
              <bucket>&quot;Toy Robot&quot;</bucket>
              <bucket>&quot;Jenga&quot;</bucket>
              <bucket>&quot;PlayDoh Playset&quot;</bucket>
              <bucket>&quot;Hot Wheels 5-Pack&quot;</bucket>
              <bucket>&quot;Plush Pony&quot;</bucket>
              <bucket>&quot;PlayDoh Toolkit&quot;</bucket>
              <bucket>&quot;Mr. Potatohead&quot;</bucket>
              <bucket>&quot;Supersoaker Water Gun&quot;</bucket>
              <bucket>&quot;Foam Disk Launcher&quot;</bucket>
              <bucket>&quot;Mini Basketball Hoop&quot;</bucket>
              <bucket>&quot;Teddy Bear&quot;</bucket>
              <bucket>&quot;Monopoly&quot;</bucket>
              <bucket>&quot;Playfoam&quot;</bucket>
              <bucket>&quot;Chutes &amp; Ladders&quot;</bucket>
              <bucket>&quot;Classic Dominoes&quot;</bucket>
              <bucket>&quot;Uno Card Game&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1v1oft211b9chg1dpyw5p1g04u9d].[:Measure Names]</column>
            <column>[federated.1v1oft211b9chg1dpyw5p1g04u9d].[none:Product_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1v1oft211b9chg1dpyw5p1g04u9d].[Multiple Values]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v1oft211b9chg1dpyw5p1g04u9d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1v1oft211b9chg1dpyw5p1g04u9d].[none:Product_name:nk] / [federated.1v1oft211b9chg1dpyw5p1g04u9d].[:Measure Names])</rows>
        <cols>[federated.1v1oft211b9chg1dpyw5p1g04u9d].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{2E3242B9-75C6-4403-8327-B10C24DC5AA6}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1v1oft211b9chg1dpyw5p1g04u9d].[:Measure Names]</field>
            <field>[federated.1v1oft211b9chg1dpyw5p1g04u9d].[none:Product_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{497EDE7C-8D36-4D14-A2B9-31126E8D291E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3AeZ3rg+ev05QjgQ845EARBggQ1JEWFURiFtWal8ZXHa3lsn/bWvjvX
      emuuylt1u1e1u1V3Va7bKZfD7vnq7LGuamZO45U0owmiRA2DmBNIggSRc/7w5Ry6+/4ARZEU
      ISYQAInv9xfV6O7n7U/99Pu+TxR0XdfJkWOTIq73AHLkWE9yCpBjU5NTgNtIpVIkEon1HkaO
      NUJe7wFsNFRVRVXV9R5GjjUiNwPk2NTkFCDHpianADk2NTkFyLGpySlAjk1NTgFybGqEm0Mh
      gsEg6XR6Pcez7mQyGTRNw2g0rvdQcqwBQi4W6Fbi8TiZmYtYFW3NZGazWWR5bV0ym0Gmruto
      qor0NTJX/IuuqaTSGRSDAUkUv7yhrt/475tRVRVJklYYiIauC4iicL/PsC4kj/4FYnhoTWVm
      1lTa5pL5daywB9C4dvEMPRcvMu0N3ziaiYW4NjRyxysGh1Z+YcL+ReaXQvc1MF3TSCSTtw0r
      Szx56xItG/Uy5Y3c9X5Lo2Pc/awcm407zwBqhJRcxFPba0FLcuI3B4ljonNbKwCDl04y7YtT
      1dJJZOoKaWMhRGY4emiaototZBMxGmucjE+miC6NshCK07SllSMHz+MoraWjteauu2//9CCf
      ne1jx+5nUGLTLKTM1NjifNYzSdeu3aSXRokrHrYUiwRjAhUe+/KFusbEQC+LKTPt9R4uXrxC
      cV07gt8PNZUs9l0mbvDQVGLm/KUBatq2UeyyrOJPmuNx4s7voWhES8XIaioZ/yRSeSc7a+3M
      hjJAhnDKxP69nQRmlxDMbnZ2NGPPL2XP3qdI+BeIJ5JkUjFi/kWkwka6t7ehyEZsFoVYNIR6
      D8trd1EV2zo7qcpLMx+z02AJsyAWsXV7F9VFNhKpNDNXe1i6fU5VU8x4Q1hMCslkAlXNcvni
      FTQg4p3k6vA00wOXGJqaR1dMiLkt0KbmzgogmKgqNXPi2AnmtXzMwX565zVqPFacjjxK8mSO
      neqjrKYUT0EBAqCoMY6fvEhJTT1OKU5P3wyOknKk0BhXhmcwGCQEUcRssXJPWwFRYGFiiCl/
      hqRvjN7xAG67kYWxa4zNLBCOpLBbjWRvj1sTJFw2IxNDg8z7/aiCAZMiogGK0YLNasFTVkG+
      00E67GVifukhf8IcjzMb1wqk62QyaRBlBF1F1QUMikz2+jFdzYIgIssSWjrC6dMXyQLmvDI6
      myrQEDHIIulMFlGSkQQQRJFsJo2GgCJJpDMZFIMR6SaNjMfjRH78u1jWeBOcY33YuAqwTsTj
      cRJH/k/M6cU1k6nrGoKwtj7JzSFTR9f1r5WZU4DbiMfjqKqK3W5fM5npdBqDwbBm8jaLTF3X
      yWazKIqy4jm5hJg7MDobQJDjayZvMzil1kOmjo6mal/xT9WWurGZlxUxpwB34O8+usC0P3n3
      E3M8lvyHP3qWjroiYAMHw+maRjKVuvWgliWRutXumY0uMb10fy6uiYFLXB2dIhKJk04lUdXc
      KnCzoes6p06d2rgzQGBmmEPnr7G9+2mU2CyLaRNV1jiHLk6xY+cu0r4JEko+LR4IRKG84Is1
      u8r0yDCzgSRbOtpIBn0sBZMU2HWGZyM0Vnk4famf9l1PEfQFmBg+R1qpYM/+7eTC3zYPqqoy
      Nja2cWcAh6eM1rY2yhxJZsNGqpQA8xTQvGUrFflWotEo4xfPs5S9/coMvrBGc1UBw2OjXL18
      jeJSJwMTYVrLHYwupWlta6OxooBYIk1lXROdnW2s7XYwx3ojCAJ2u33jKoAoSfhmJ5gLZUkG
      pxmYDuGymfBNjzA5v0g0oeJ2msh+RQEgFlzk2tA4FqsNT2kVDrMZORPi6tAkFosZSZKQJBEQ
      kPQs/X2DGy5IK8ejRdM0/H7/BjaD6jqpVAIkA4KaIauLmE0G0skEyAb0TApEGUWR0TIRzpy+
      tOwIyy/ALhqprC7DbDahqRqyLJHNpEhltOvH1OVjWQ1R0Ekk05itFkSWzaD/y99+ktsEP8F8
      sQlOJpMbdw+AIGA0XQ9SU+QbSxSj+ctjXyBJLvbs33/H24jysglMVozIyhfHlq+Vr//Nar31
      Z2iqzMeTv3a1gZadNWsbKr6ZZdqvm0BNJlMuI+x21iMj7OtyKXIyHw5N0xDvkL/yBRt3CbRO
      xONxMgv9WA1r96XKZjPI8sreypzMB0W/rnQPkBG2mUn+5j/mMsKeIJlfx4pzQyY2x88/+g2J
      m5xE6WQMXyCCpmaYX3y0wWK6ppFK3bYc01SS6dscYTEfM77oXe/nn5jk7mfl2GysOAPMTyzS
      2FqBPxBDCI0zMOXHahaYngvRvedpEtEoQwvjzCwlqG3rxDt0hkhco37XfsqdD79+Ds6NcuRC
      P5279qLE51lKmSi3xDjSO832HV1k/FMk5Dwa8zX8EZ2yfNvyhbrG9OgAvrSJ5qo8+q4N4qls
      QvV6sVaW4RvuJ6nkUeMxc+XaCBWNrXgc5oceb47HkzsrgK4yMDqCqCiIHnDoSfY9vYdUNICn
      WKXILnN1wUc6bmVfdy09I0tY3CVsbzXTn9DB+fADs7mLqG9QKbImuDQtUmP1MqeVUttgo8Rl
      5tKIn8nJYfKf67r1QjXJ2OQsruJakskYQb+PSe9lthaYiS5N0XN5AFGUyTTVEEmpoOW2QJuZ
      Oy6B9EyU6q37eO7FVyh3SJR77Bw/doJoVmZ+/CreqIrTUYjHmebY2X5KywpxOBwIigWbcXV8
      a5IiE/LO4o2opMPzjC1GcNrMhBcmmV30kshIFLotZG53hAkKRR43MyODzC75MTvysSoSGiAp
      RvLyPdQ2NuDJy0fJhBmbXbu4/xwbj41rBdJ1EvEoyCYENUVaE7FbzSSvH9PSCRBljCYDWjrK
      2TPXHWF5pbTXFpNFxmqSicYSKAYTigiiopCMRckiYjEqxOIJzFY7BvlLpc1lhG0uNq4CrBPx
      eJz4Z/8JS3J+zWRquoa4xtlZm0Xm3ZxvKyqAqmbR9eWYHHGNvXfrSS4j7MmR+VAZYacPf4xu
      8tDc0UQ6rFNS6n4kg9yIzHgjSKG184g/ikwpo0GmsnAVrBFPOF//q4sikpghGEwT8Q4x7Y1S
      2tgI0RSVhWa8monA6GVUewVOAsz6ErTs2I3HurYextXmr94/89gHw9WVuvnP/9NL6z2MDc+K
      CuAurqGhqQlRCjISDmJwFNC9vYJxX4xkLEE6rpEQJARLHttbK/j5T07iKC4hHk/DGiqArmZI
      awJG5d6/oMlYmKQm47I/+RXhQqEQH3zwAQ6Hg3/2z/4ZgUCAEydOUF1dzYkTJ1BVlXfeeQdd
      1/nJT35COBxm7969tLe389577/Hmm29y8OBBQqEQb7zxBlardb0faVVZcUficDqRZRlRMOL2
      5KOkvJw630tGN2ISwvSOzWM2mSgoKEAQDLS01iPJJizG1ZnKtUyKqdm5Ww+mI0zM+289FJxh
      cCZ4X/fu7+slmogyN+vDuzBNPPnkdoU0mUx85zvfIZ1OE4lEOHLkCKFQiJaWFv7oj/6Impoa
      FEXBZDLxve99j+7ubgoLC7l48SLT09MsLS2h6zotLS2MjY2t9+OsOiu+rWXl5df/Zae2zsJo
      3zwmez71VSXYjBU3nbm8zmzs2E3jKg4sMDfGybN9JHd2szB4lZQmUlFZQE/fFNmdu/CO9LAQ
      Udj/VN1tV6Y4degECVWlorUd3+AVpLwyxNgiwXiW4vJSBsemUfJLUVIac5OXSSvl7HtuJ6ZV
      HP9GQVEUDhw4QCaTob+/H5fLRSAQIJPJMDY2Rl1d3Y1oyVQqxdLSEq2trRw6dIj8/Hw0TcPn
      8zE5Oclv/dZvrfPTrD73aJOSqG3dxp7dO7Ct0hf+briLqmhrb6c6H0yFLexuKiBlLKJ16zbK
      8xR02YYpEyCUuv1KHUdRNbu72knGQljyKuhqLSWjeNi7o5kkFtq3bqWttgQNidrGFnbu7Hhi
      84Hn5uYQBIF0On1jFhgdHSUWizEyMkJ9fT3hcBi/38/AwACNjY3ouo7D4WBkZISRkRF0Xcfl
      cuHz+db7cVadDesH0LUs1y6dx1hUh7o0hi9tomtbE4OXezAVVhOZHUaXbVTXVZBIphjrH7yR
      EZaanUV05NHRuYV4KEZhoZu50WuMzMdo39ZBKhqksNDN4mIEi5yi99oc2/csJ8U/KRlhX2yC
      0+k08/PzmEwmPB4PsPyMiqKQyWSwWq2cPHmS+vp6rFYrJpPpxowQi8Uwm834fD7S6TQlJSVf
      G1t/NzaiGXTDKsCDoxIKJXA6bQ90dTwe52/eP81S9PHOCCv32Pmf3+xe8e85P8AyT6ACPBw5
      R9iTI/O+FSCXErmcEpn1T2CU1q5H2N3S9h53mYLJiWAryqVEPg7kguFWH7n1Dcwv/acNOQOs
      aNLpu3Acf1KheUs7+Q4zt69Qw8ElFLMbs3FZo5NRP5cv92EpqKS1oYLxvh50VxV1Zfmr8jAr
      oasZMpqIQfn6L0s2lUIwGlnb70+OmwkEArz//vuUlJSwe/dufvnLX7JlyxaSySR9fX3Y7Xa+
      +93vkslk+OCDD1BVlddff52PP/4Yt9vN3r17+fDDD7Hb7bz88surEj6y4twgmvPYvb2F4YF+
      ssko165eIRjPEAsucuVqP75gkGQ6jT+w3ERvZHCExu3d2DMLDI2Pc2VoHrPxwT3CWibN9Nxt
      EZnpKJMLX3WEDcwE7nq/md4r3P2sHI+SqakpXnrpJd544w3OnTvHK6+8wvDwMPv37+ftt9+m
      oKAAURQRRZFXXnkFl8vF0aNHqaurw2AwcPToUaqrqxEEgXA4fHeB98DXqpBssmFUdAYunKR/
      IcqEN0KB1UB1XTXhxQmOfz7F3mf3ApARFZwmBdHjYiZqoLSsArf9wVMNA3OjnDjbR+eubhYH
      +0hqIpUV+VzomyKzcxe+8ct4owb27qq69cJsgmNHP0ezlrC9ycOpU+cxeuqoBLLxEJ+fOkUS
      G/VVbgaGZmnr6qaiYO02vJsZm83Gr3/9aywWC1u3buW//bf/Rn5+Prquc/r0aXbt2gWALMuc
      P3+emZkZXn/9dQ4fPszU1BTd3d309PQgCALPPPPMqoxpxRkg6l+g78olsqINk9VBbX0TzfVV
      yKh4vT50g4PmmiLmFvzogNugc+HyVfoGFigpz8dmsz3UDOAuqmJL+1aq85YdYU81FZAwFtG6
      tZPyPIWsblz27t5urhcViooKEZMR5vwBrE43/vl5skA0tEgoLuB2mjFb3eQ5LYRCq/MlyXF3
      NE2joaEBQRAYHx+nvr6eYDBILBYjk8ngdrtZXFxkYWGBVCqFzWZjbm6O0tJS3G43iqJQWFiI
      oijEYrFVGdOKM0BjaxvJrEhDnhtRz+D3BTHZXZQWOAmGEzhcDhRJJnW9hHlFUzs2vx+lrg6H
      wYC5tuyhBiYoCnrUy2SoAZs6ysV5I13b8xm4dIFpYw1mo4ixuh67zYGcSHH8yJFlR5i7CAdZ
      FLsTj8uFdy5AbW0VTquM0eMhVuQliYIi6mSyGi6n46HGmePeqaqqwmAw0NXVhd1uZ3x8nF27
      dmE0Gtm3bx8APT097Nmzh6amJkRRpLS0lKmpKdrb23G73UxOTqIoyg2n3sOSswLdRjweJ/7x
      /4o5ObNmMjdKycBHhVz7DMbdf7whrUA5BbiNnCPsyZF5Lwqw4h4gtDjJsc+PfW33lejCAquz
      EsuRY31YoS5QiqFxH93f2I2mqoz2XSJtyqeuwkPI5yUlWBHiiwxdnaL1JSdT/f1Yi2qoeEJS
      8P7vX1zAH1vDWCBNR/ia7uG//1IHDRWP1p+yWbmzAmgJJJMLRZJB1FhcmGd4YYw8xy4GhmbY
      0lrCeEShsiSfeGiRqXk/jZ6qO97qUaNrWbKagCLfu4srk0qQ1kSs5jsHQY/MBDZUNGgksRye
      kkwmCQQC5Ofnk0qlCIfDuN1udF0nEolQUFCALMvouk4oFLqxjFtaWsLlciGKIj6fD4fDseYd
      Ijcqd/4VJAdyuo9Ll6MU5JuJ6g5K3DJZRCqra7CaNKLBOZKJONUtNRQ4TQyNjlNVvHqJ81om
      zZwvQFlx0ZcH01GmghkqCr+Ukw5MMxix0V5dcM/3vnLpHK7yekwBAwYlhdlRhMW4sX3EXzR1
      83q9mM1mAoEAdrud7du3c/nyZUKhENXV1ezZs4epqSk++eQTXn31VSYnJ7l27RoGg4GWlhZG
      RkZIpVK89dZb6/1IG4IVPgMibdu6CIYiWBxOdlny0GUjVosJXCBJIp0dRrK6jM1owlTfRJNl
      dc2JgblRjp/to3PXbrxDV0moEtWVeZy7OkXXzl0EJ6+yFDfw1Pby265McebISWKZLFVbOvAP
      XQVXCXJ8EX80S1llGUPjs7QVVKBmkgyOX3xsMsL27dvH+fPnsVgsjI6Oks1msVgsvPTSSxw/
      fpyysmXTc2VlJTt37kQQBAKBAN/97nf51a9+xdatW2/E96+11WmjsuI8KMoG8vKX150md95X
      /m5zfvkVduet/vp02REmU52nES5sZZtzieFMIa0dBZTnGZgbFcgEZggkb1cAHZunivYyGyOL
      fgzOEra2FHP6ks6+Lie9cxnat26lpbaY/mvz1Da2YvfUPhYZYWfOnKG4uJiqqiqKi4tJpVJ8
      /vnnOBwOtmzZQlFR0R2vCwaDJJNJ+vv7yWQy7NmzZ9NH/X7Bhl0ICoqCGllkMtSIJTNMz6yJ
      ru15y44wQw0Wo4Kpuh6b1Y6UvMkRll9AanYGf9BNe+cWEqEYyHZKHZOcujJJW8c20tEAIOFy
      27HKMpcvXqZr744NrQSapjExMcHFixdpbW0FYGhoiBdeeIEDBw4wODhIV1cXCwsL1NfX85vf
      /Aabzcarr77Kz3/+c7q7u5mZmWFoaIjJyUlefPHFdX6ijcET6AfIEgjEcbsfbEm2EVMi/7fv
      7Wd7Y8ldz0un04RCoXvykub8AMs8gQrwcMTjcUZn/UjK2s0H2UwW+WvqGlUUOrGZV/fFySnA
      MrmMsNvINcl7smTmMsLuk3g8TvzQ/4EltbBmMh+3WCDJ04xx35/d93UbcQZYcd7tv3iSpYRC
      29Z2XFbjVzLCNFUFUUQUBHQty0jfZRaiAtt3dGBW1i6/VddUVF1Alr5epprNIsjyPRVCUud7
      UXMpkSujLXcl0TSNYDCIIAg4nU7C4TAmkwlFUQgGg0iShMvlAiCRSBCLxcjPzycaXe7WZrPZ
      iMViZLNZnE7nuphmV154Gl10N5VyrrePztYaJmcXKS6vQdGTBP0hZueGwVjO1o56AqP9aHk1
      dDcYyWhZIrEsVlknrskkQj5C8QyVVZUYpHt/QC2TZt4fpLSo8MuD6SjToQzlnpsdYVP35Aib
      vngJa9cO7t1dluNuLCws8N5779HY2EhVVRWff/45iqKwb98+PvroIzo6Onj++efRNI1//Md/
      JJFI8M1vfpOTJ08iSRLPPvss586dIxAI8PLLL1NVtfbRBF9rBlXMDkwGiIe89F7qYcybpFT0
      IRc3YbFYka12RGAxrlJXqnDu88MUbtlJ2O+nOU9lLOkiNLdIngv8AQ/FBfdejDYwN8qxs310
      7nqKpeGrxFWJmko3Z68sO8LCMwP44wZ2dhTfemE2yemTJ8maPHQ0erhw4QqmgiqKADUR4UzP
      eZK6jeoyO0MjczR17KA8lxH2QEQiEcLhMFarlfn5eb773e9y5swZJiYmSCQSuN3LH6p4PE5j
      YyONjY309PQQiUSQJImpqSneeOMNDhw4gMOxPnkZK64I4mEfI0PXSGPG5w3Q0tmFiSQWVzF1
      NaU4bVZSiSQaUFVg5eLABC53PoIokgj5GRmfBiC/qISiwnzE+2xG5y6qon3rVqrzVAyeFr7R
      nE9ELqKto5OKfAPRRIbY4jiBr2SEyTgddtR4hEV/AESRmfEpskAkOMfsQgxJzKIYbJgMIuFI
      rnnqg1JWVsb3v/99FhcX8fv9BAIB4vE4ra2tfP/73+fcuXOoqoosywSDQXw+H+Xl5fzpn/4p
      u3btwul08sknn/Diiy/eUJa1ZsUZoKq6hlhGpLOmCNJRFgJxyjuKMEoSMlBYWoO2EEQA7KV1
      NCtzRFJ5lOS7cAnVpDQJh8uFgIAi6ej6/e3+BVkmE1xg0tqIKTXM+SkjXV15DFw8z6ShBovJ
      gKm6DpvFhphMc/r48WVHmNODGR2D1YrLbmdO8lFdU4TdJmPKL6SyZJG0bEaWQEfAan3yS6Q/
      KhKJBL/4xS9wu90888wzvP/++9TW1qKqKu+++y41NTVcvHiRwsJC7HY7Fy5c4M033+SDDz5A
      kiT27NnD559/zg9/+ENef/11SktL1/wZnggrkK7rqOr18GVBQH4IU1uuLtDdkSq6sbz1/9z1
      PF3XmZ2dvVFTdCNagZ4IBVhN4vE4mbkrWA1r97M8ihZJj1KmYHQgFbbc93UbUQE2bCzQeiIW
      tiCvYUqklk4jr7FXdj1kbkRyCnAH3j1wmWDi4WqD5jvM/Kvf6rr7iTnWlcdeAXRdQ9NBuo9C
      r2o2g6oLGFaIv+kb9z50MFzZddOqruuk02kkSUKSJBKJBIIgYDKZSKVSaJp2I4srlUrdiPH/
      oqGFxWJBVdUbtfxzcfyry4ZVAC2bZsEfoqTwpsjGdIzZUIZSj+vLQ/7J+84Iu3zuONbSOuyy
      BaMhg9nuuVHjdLWJx+O89957tLe3U1lZyccff0wkEuGll17iV7/6FfX19Tz77LPIsswnn3zC
      zMwMO3bs4OzZszidTvbt28fp06fx+/3s27ePtra2RzLOzcqGVYDA7Cifn+1je/c38A1fIZqV
      qa1yc6Z3kq6du4jODxNIGNjRdnvob4pzn58mks5Q074N//BVNHsxxqQXbyRDZVUZQ5MLtBVW
      k0hFGOzteaQZYVarlZdffhmv14vH4+Gtt97i008/ZWhoCEVRMBgMN+phNjQ0MDk5SWFhIV6v
      F7fbTXFxMW+++SafffbZutnKn2Q2rAIsO8IUqlxZwp5W9rh8DCTzaesooCLfyKnBOIGFSfx1
      tyuAjiW/gi3lDkYWlpCthWxtLuJMLzzd5eDSbOrWjLCmVhwFa5MRFg6HOX78OK+99hoXLlyg
      pqaGgYEBvF4vJSUlVFVV8eKLLzI0NMS//tf/Gq/Xy2effYYoiuzevftGXE2O1WPDKoAgy6QD
      c0xamjAkhjgbMtDVlUd/z3kmlVosZiPGmlqsFitCMsO506dRAZPLRXh6Al/AyZZt7SRCUVDs
      FJrHOHHJR2tHJ+moH5BwOK1YZZHei5fZ+YgywkKhEO+//z6pVIqdO3cyNDTE3Nwcr7/+OgcP
      HkSWZQKBAH6/n6GhIZaWlnjhhRc4fPgwi4uLvPjii3z00UeMj4/zzW9+k/r6+kcwys3LE+EH
      0HWNVGo5j0EQIRpJkZ//YDWKVisjrKzAzt/+m1fv6dzx8XHKy8vX1BeQS4hZ5olQgNUkHo9z
      bXwRQX64+cBokGirLrz7iWyOl3E9ZOYywh6AXEbYkyUzlxF2n8TjcRLH/hJL2rtmMh/HJnnG
      Z/4c0XZvM9wXbMQZYMVFp67ryz+SJH0lG+xuQnVAfIwdNtmpM2TXOBhu7XpSro5M454/BZZj
      ir4IeQZuOPa+WEnIsowkSWQyGdLpNIIgIMsymUwGSZIQRfHGv9d6doCvUYBsbI6PDw3w/CvP
      YLkpk8u7MIuroJSVetKlIkuMziVobap8qIHpmkYqk8F081JEy5LI6Ld0nslGl5hPGu+a1OIb
      H8dYXc2Dtc/OsRJ///d/jyzLPPPMMxw8eJBwOMyrr77KmTNnGBsb47XXXqOrq4uTJ0/S19eH
      z+fjueeeo6enh6eeeopgMEh/fz9PP/30ujj5VlSAuUkvjW3lBAIx5mb7mA7GcBQ24BTDGPUY
      n16dQ9YyKJJEU+c2vAO9+HULXU0VqzKwwMwwh85fY3v30yixWRbTJqqscQ5dnGLHzl2kfRMk
      lHxaPBCI8qUC6BqTw30spUy01RTQe+UahdWt6Es+9KoKvANXSRjyqS8yc7F3iOqWdgqduZyA
      B+GLnODq6mrsdju1tbV0dHRw7do13n77bX72s5/R2dkJwNNPP43L5UKSJM6cOYPFYsHhcHDy
      5Ensdvua9mO4mTsvAvUsg6MjzAwNMDgxB7Kd3fuewaxHSMbjaFqWpu37qCgvYVd7G9mEF184
      zeL4BOFMdlUG5vCU0drWRpkjyWzYSJUSYJ4CmrdspSLfSjQaZfzieZZuF6cmmZz1YpAlEqk4
      8XiMnp5eNCDineTytTFGr1xgaGKWtC5Bbgv0ULzzzjts27aNEydOEI1GCYfDmM1mJicnKSsr
      u7GsUVWV8fFxGhoacLlcvPLKKxw/fhyHw8Frr73G0aNH0bS1XwjeUQH0TIzabU/z3Ivfosol
      Y3U4kAQBu92Ow+VGMdmxGYTlMttGIxazA6tZobSyHLPRhMP+8F9UUZLwzU4wF8qSDE4zMB3C
      ZTPhmx5hcn6RaELF7TSRvV0BBJkCl52p4UHmlvxIRhsWRUIDZIMZp9NJeXUNBW4XeiLAxOza
      bXafNDRN4+TJkxw6dIjt27djsVg4dOgQTU1NhEIhWltbiUajHDlyhEgkQnV1NQaDgc7OTn72
      s59RV1dHd3c37733Hk1NTesS6LdxrUC6TiqVAMmAoGbI6iJmk4F0MgGyAT2TAlFGUWS0TIQz
      py8tp0TmldFRX4qKhMkgkUimkBUDsiggSBKZZAIVEaMikUylMZrMt5RUyWWE3RvW7/0C0V19
      1/NCoRDZbJb8/PwNaQXauAqwTsTjcdJTZ7HJa9chJptVke+jwcdGkClV7EYw3N9MvxEVYMVN
      cCadQtV0FIMR6Wva9zyJSKXbcxlhm4QVFeDcsd8gWgtp2FJPKqRRUrp5QnH/v99cJZx68Imx
      rbqQl3bVreKIcjwqVlQAVc2QTmcQhBSBQJrwwgDTvhilDY0QTVFVaGZRM+EfuYozXvIAACAA
      SURBVITurMKh+ZnzJ6hpqmP4Sj/FdW201BSvdPsNTc/Q/EMFw8mSmFOAx4QVFaCgvIHmlhZg
      idFICIOjkN3bzYz7YiTjCVJxjaQoI9s9tLdV8LMfn8RZXEomK2E2yoTDIeDBFUDXNNKZLEbj
      TdO0ppLMapgMNznCYj4WkkbK8u/dxTU5eJmInEd1YT4Gg4goGx7JMm9qaooPPviAt956i2Qy
      yc9//nN+93d/l76+Pq5evcri4iL//t//e+LxOO+++y5+v59vf/vbfPLJJzgcDnbu3Mnhw4cZ
      HBzk3/7bf7tq3dFzfMmKCuBwfhFObCSvsIB0eIJT54PkV7VgFhe5OhGisrUIh1yAgIEtWxqZ
      DWUxG0QEQcRitT7UwIJzoxy50E/nrr0o8XmWUibKLTGO9E6zfUcXGf8UCTmPxnwNf0S/SQFU
      ZsdGmQ+maGlvJhkK4AsmybfrjM1Fqaso4GzvAO07d+Nf8jM12kPWWEH3no5VzweoqKjgueee
      A6C2tpZ9+/YhCAL79++noqKCcDiMKIpYLBbefvttPvvsM7xeL4IgUFhYSH19PVVVVRw5coT8
      /Fyb1EfBigrwZZUuOzW1Fsb65jA5CmioKsVqvNnbu6wo9e27+CJVo6Tw/oKk7oTNXUR9g0qR
      NcGlaZEaq5c5rZTaBhslLjOXRvxMTg6T/9ztlRcyLAbS1JQ6GB4bIzgxzZZdHQxcm6K50sGo
      N0F9QyPVJXmMDi9SWlWDNa+GtdwOaprGlStX+Na3vrU84kyGzz//nKeeegqfz0dLSwuyLNPX
      10cmk6GxsXHNg+U2C/f4q0rUtG5jT/d2rGvUTlRSZELeWbwRlXR4nrHFCE6bmfDCJLOLXhIZ
      iUK3hTs5nhNhPyMTM5jMFjxl1bhtFsRshOGJOUxmMwaDAYMiAQKKoDM2Mk7mETzD8PAwv/71
      r/nFL37B+fPnOXjwIB9++CGhUIja2lpkWeb48ePMzs7S29vLT37ykxsZYsPDw1RVVZFOp6mp
      qXkEo8sBG9kPoOsk4lGQTQhqirQmYreaSV4/pqUTIMoYTQa0dJSzZy7daJJn1WUqqsuw2ayo
      WRVFkcmkEsRTKjabFU3NLh/LqEiCTjSexOZYrnS9Ghlhz++o4U/f7L6HR9QZGxujrKxsTfMP
      IJcQ8wUbVwHWiXg8zsWhOXRx5R/tbhS6rTSU3/uafTO8jOshM5cR9gDkMsKeLJn3lRGWTCbX
      JSLvZsxm87pWP4vH4yRO/V9Ysv41k7lRMsKUumeR6557ZDI34gywohXozG8+YDxs5sWXnsdl
      fvDlwONIduzopswIE+0lj1QBNiIrKkBadPHynlp+feA3PLO9ioS1HFs6QjijUVlWQmBhmpRk
      o8RtZmpqBndxBXrchz+mUlFeTDKtYRQ1dFEgFU2QEmQ87nuPr9GyGZaCYQoLblpLZ+IsRLIU
      5X3ZTiftn2AwYmVL1deXRpw8fwHrju3krOl3R9d1fvzjH2M0GikuLubixYvk5+fz27/92/yX
      //JfaG1t5dlnn2VmZoaf/vSniKJId3c3p0+fxul08vTTT/PTn/4Ul8vFO++8s6Hrma6oAKIk
      4/BU4bD0EfXNEJWMHP7wDGY3aDsbOXVuCks2QGF9OYcOX+W33/4XeM8d4L3Dl/md3/sXLIbM
      tOVHyFgNHHm/l6f/u2/dlwIEZkc4fLaP7d17CE1cI5wxUFdu5eTlSbp2dhNbGCKUNtPZlHdr
      TouaoufcOVKym/YGD5cu9WEprMGt66ipOJd6L5LATlWJlcHhGeq3bKMsP9cj7GZmZmawWq1Y
      LBba29uZnp6msLCQq1ev0tTUdGMdLwgCbrcbWZaJx+M4nU68Xi/nzp3jX/7Lf8mxY8dIp9Nr
      buG6H1ZUgGQsxMRwL9G0EVFYfsPqtu6i3BUmk4liLSijOBHFVNzC/l1Jes+fQdYK+Oev7CEa
      iJOMxBiPLOBpa6Bt9zO0Vt6fG99dVMXWDgNV7gy9oUaeul4acUunh8oCI6eHE/gXpvFV32Zu
      FEQUWSIaj+ILKqQzWRaGRrEX2wn7Zxib8uHKV1F1JwIa0VgCcgpwCz/96U9Jp9MEAgF2797N
      3r17+eyzzzh16hS6riPLMt/4xjcIBoPU19cTDAapra2lvb2dTz75BIvFstxoJJPZ8A68FRWg
      KN/K4HSUl194GikZIM9gIWsCs5KHYDShJs4SNnTTnCdxYlDiG/ueJjV7lbmUkfbqWuZHegiL
      zdQUV5Jx3f/GR5AlYouTTJpbEcL9nPIp7Oyup+/8WcbFOhRZpqCkFJPBjKZnuXblCipgtDoQ
      RAFRljAYDEiygZLiPCwOA0Z3MUUF02CyoYjC9QoFa1+JYKPzZ3/2Z4TDYUZGRjh37hz9/f3U
      19fz9ttv4/f7mZmZ4ciRI7S1tXHixAlkWUYQBN5//32qqqro7u7mRz/6EVVVVV+7Ad0IPBFW
      IF3L4PeH0AHJYMLtePDaD5s5I8yw+08wPvUndz1P0zRGR0fvu07pRrQCPREKsJrE43HSo59j
      ldbOH5JV1Ydq7LdaMsWCJiRP4yOTuREVYMUl0MlP3uPKRJoXvv0G1QWbq5qOVPUNlDXMCNPT
      aZQ19squh8yNyMqV4cwlvPPOPiDAhVOjtLQ6GJ/2UVpViZBVsZgkUrqIlooSjms4jBqzgSS1
      lSVMj49gyiujJH99un8/LB8eGyCaevDrm6vyebYzF8D2OLCiAoz1fs7VkWlefaOLuTk/3oVe
      JEVkNhwhvRChu8XFgOZk9MQvadr9Cj97/28YmI3xwnffpuezo7z827/32CrAqavTDxUMl1HV
      nAI8Jqxoo6pp38c73/sdSl1m0FVU0UxRvgtdg2Tcz9DwKKkMVDfvYEdrBY6SZv7wX/0xW6tr
      eOGZnVy+1PNQA9OyGby+28IRMgkWA5FbDqX9E1yd9N3XvS+dPszV0XHmZn2EAksk049m3zM1
      NcVf//VfMzc3x+joKH/1V3/F0tISAwMD/OAHP+Do0aPA8t7rb/7mb/iLv/gLYrEYExMT/Pmf
      /znT09P84Ac/4C//8i+JRqOPZIybnRVngJYtW67/q4Cde6z0Hvkn/t+fzfDt7/73NHRKLERF
      2quLEVU3AgZeemE/V8aWKK+0IIgy+5/e81ADC8yOcOi6IywyNUAoo1BbarnJETZMOGNhW6ML
      TbvZE5bm0unzBONpGjq2EZwYIqU4sWpBZgMpaqpLGZhYoM1TQyad4GLv2UfWI6yiooJnnnkG
      Xdepra3lG9/4BgCXLl2iurqasrKy5WcNBNi5cydut5v+/n6mpqbYvn07mqbh8XgQBGFDe1Mf
      Z1ZUgC8bspkoLDKy68V/zpZnIT8/D1ksp+rGmcu1YTyVTTxb2QRA/r5nHnpg7qIqOrZ94Qir
      Z/d1R1h7p4fKAhNnRpYdYf6qXbddqSHbitjd4mJoYY60aqCjzcP5Kzp7O2/uEVZE/7V56prb
      sK9Rj7AvMJlMNDY2cvToUSorKxFFkXQ6TTKZpLe3l/Hxcebm5jAajdTW1jI/P088Hsf6kGmm
      Ob7KPfbkEbC78llLf6kgS4TnJ5gwtaIHr3HSa2Dn7nqunj/DuFiHJIrkFRZhNJiw6lmG+vtR
      AYPNgn9mmFNLFpq3dZAyRJEMDlziIMcuLNDUsZ10ZAkQsVhMmBWVS+cvsuvprlWfAYaHh/nl
      L3+J0+lk586dHDhwAI/Hw4svvsjHH39MaWkp58+fp6amhomJCeLxON/73vdQFIUjR47Q3NzM
      Bx98gCzLWCy5Ar6PgifCD6Crabxe/3L9T6MBNQ1FRXkPJH+tM8KGhoaorKzEZHoUTVpXJpcQ
      s8yG7RJ5PwiSgcLi1atB9NYzLWR5cBd+6V16FXyBIAg0NjZu+iSk9eSWGSAQCJBKPYQBfBVY
      7+CpXEbYkyUz1yPsPonH4yTPvYtFC66ZTE3VEKVHp/iSpxml7Y1bjuWWQMusuASaHLqCN6pS
      09BMnu1evoYqAX8UV54TQdeYHh0koltorKsgEfIh2wowPSYLrszQATJrHAz3KGtR6w0vfkUB
      ciyz4isZTmSprypiaHgSe0s5sWQam82OrmZJZ1UMikQ6ncVkkIjGU9jsBsZHp+nIc+KfGsav
      WcjTgwxOW8A/TU3712ds3Y6WzeAPRynIu6kobyaBN5q9JbEmHZhkJGqlpeLrc72mLl7Cuq2D
      B9saPxmMjIzwySefIIoiL730Ev/0T/9EW1sbVVVVfPjhh2zbto1XXnmFcDjMj3/8YyYnJ3nt
      tde4evUqkUiEt956i3fffZeysjK+853vPBFm2RUVILgwyZI/gKeyhcWJaxw910t9x35S3jFc
      ZdXE5yeQ88rBN0T/9BINnXtv3CyUTFNVXotTsnFhOEJTfQOm+5zhA7Mj/OZsH9u79xKbHiCY
      MVBbYuLEdUdYfGGYUNZKZ4OTrHrTKk5Nc+nCeRKSi/Z6D5cuXcVeXIcjmyWbTtDbe4mEYKe6
      xEr/4BR1Wzrvq67o40x1dTXNzc34fD7Onj1LS0sLNTU1LC4uUlVVRUdHBwAOh4N33nmHjz76
      iO7ubiwWC1euXCEej2O32+ns7MRsNq/z06wOK76WecXV7NrRQTy4xFIkTffOdhKhKO6Satrq
      K7DlldLZWktSk9m9Zz8Vni/t1A6jwtTcAnNTs5js1gf6Uiw7wrZR5U6j2uvorrXgFzy0d3ZR
      6TERjibwTw7iu33PLoAAZBMxAuEgmazK6NAIKhD2TTM2tUQs7COVFdB1jXgicd9je1z5wiMt
      CALZbJbKykpOnTpFY2Mj3d3dfPzxxzfM4NPT05SUlABQXFyMx+NB13Vee+01hoaGmJmZWc9H
      WTVWVACLotN7bYzqulqqykuIZMy0NJRTXuJBEETKyksQBJGOjnZ8i4tIio2qmjIEoKCyAYcW
      wKfaaLrL0mQlBFkiNDfORFBBCwxwYjBEbZmL8PQA4/PLRWVdBQUYFCMWOcvY8DDDw8NMzi5d
      31DqCIKEIMrk57sx2my4XYXkucwYLTZkUUAUNlePvP7+fn71q18Rj8fZt28fx44dw2g0Mjc3
      x6effkpBQQGXL1/G5/MxPz9PW1sbPp+Pn/3sZ4yOjqLrOocOHSIYDN4UKfB480RYgXQ1zdzc
      4rIjzGSjuMD1wPd6EjPC5IYXMb/2n285dieLjK7rDA4OUldXd6Px9WqyEa1AT4QCrCbxeJzU
      4KdYhQf3BN8vqppFkh6diUx0lSNX3RqcmDODLrPir+6bHWNsIUZLazOpaIi8TVSfXq57DsMa
      ZoStx8uYY5k7K4Aa4dpYgK2tVWQyWcbHx9ATcRRPMUIqSlaXELUsRqsDUUsRTWRxuRyIT0jI
      7q9PDxPPPPpn2dlcSlvNw/dSyPHg3FkBJCtleSI9vQO0dW4HIBgMYDdZGLh2iUwiS36Jm6xQ
      RGTyFDO+OJ3PvUVr2ZNhTjxyceKhguHuFZfNlFOAdWaFGSCDyV1Gi8XHgv/mDCyRsuoGxGiM
      opYyxq4GiBqd7N3fjc22ujEeuq6jadqtsSO6RlbjlsbWaiKIL2Wg0HXv4cLz4/34NDuNFUWI
      ooAgius6e127do2TJ0/ye7/3e5w4cYL+/v4bG9GBgQFaW1t5/vnnmZmZ4aOPPkJVVV544QU+
      /fRTAL797W/z3nvvUVdXx+uvv75uz/E4cmcFEGXUuA9vUqSpMZ+4Q0IRRWSTBYvFiOB0YsBE
      eUUBpZ5WxmYDuAvLVnVg0aUZTl8ZZuu2LqRUgHDWQIEc5eTAAtva28lGvaQlGyWmOAsR200K
      oOGbnycQS1NRXUEmFiUcS+Mww7w/QYnHQc+1Edp3dDE7tYDPO4hoqaStve4h4j8fjpaWFqLR
      KJqmoaoqDQ0NiKLIrl27SKVSN5xOpaWl7Nixg9HRUcrKyvj93/99jhw5wuXLl6mtraWpqWmd
      nuDx5c5+AEGivLaZra2NGGURtzsPm9OFyWjAZrFgdTiQUHA4LLgKK+jcthXHKgf6yIoRm82O
      gTCDYz407whTMRGbzYFJhvGhPj7/9BCBrwTRpBkfn0fREgxPTNBz+hy6mOXKtQkMaoShGT9O
      lxubWSGeTGG2WLFf7w6zEchms5SUlBAKhVAUhfLyciKRCLquo+s6BQUFGI1GgsEgR48eZe/e
      vRgMBgoKCjh58mQud/g+2Sj/37+C0WJD1DNkVB1NzZLKqphtdgQtRSwWQrQW0VzpJnWH5l46
      Gsl0GkmS8ZTXUuZxIegqqXQG2WjB7XbjslsQBBG71UoqkWQ9bcEXLlzg4MGD/PznP8dsNnPs
      2DGsVisHDx7kxIkTGAwGjh07xtDQEB9//DFer5eBgQEGBgZ4//33aW5u5vLlywBPTIjCWrFx
      /QC6ht+7gGB2IabDRLMypYVuAt55BLOLTNSPIJtxOG1k0zEunu+90SNMiiUpqiinpMRDOpnB
      bDaSiARYCqcoLi4im04uH0tkUESVeW+I4vISZFYnI+xe+YNvbeONfc13NYNqmsa1a9doa2tb
      Ndk5P8AyG1cBHhgdTQPxARtfx+Nxjl4aJ609+sSNtmoPdWV5m+JlXA+Z960AkUiETOZRNAx9
      fEin02iatqY5upslO2sjyrxFAVRV5YmbEO6TRCJB8tJ7WLTwmsl81Blhd5MpVe1FLut85DIz
      mcyalku/71CItdbOjYgkSWgDv0DbRD3CFKsbuWrno5enaY8kyG4lvviYf53MFf9y+vCvSehG
      PNWtVOfJZBQnLssKmpSY4xefXcXucrFrdyfmVWg68YXZ75aEZl1H1XUk8WZHWAh/WsHj/HpH
      WGh+HkNxMTkbycrous5Pf/pT3G43JpOJy5cvU1FRgd1up6enh/3797Njxw7m5+f58MMP0TSN
      V155hQMHDvDiiy9SXV3NyZMn6e/v5w//8A/X+3HuiRUVwFlUTXdLMxcu9JC1eshKCueO9RHR
      Bbq2b2G49yIJycnOrnYUPYvNXUxZiQNSEU6fvkxUtLO3vZKeS1dRFTfdu9rvqwZLzDfH2b4R
      2ju2I6VCRLIKeXKE04NLdGxpJRvzkZFsFCoR5iO2LxVA1/EvzhHNypQU2JidnceeX0JkegZr
      USGxhVkykg2PQ2F6ZpG8kjIc5lwgGiz3BpMkCVmW2bt3Lw0NDVy5coVoNMqf/MmfcPDgQXRd
      p6ioiD/4gz/g8OHD5Ofn881vfhNN04hEIvh8PuxrGEj4sNzTwjMZCxJLJ1Hs5TRXFBJaHEEq
      aafRGWfq+lJZMRoxmYxEFmYo3fIUDoOG3ztP7dansAuZ+57iRUnCYDAiZINcG54nOTfAZFjH
      YDAgCxojfZf4za8/JXi7I0xNcO7sWbyBKOlEiIvnTnPo+AU0IO6f4eCnn3HwwAH6Bvq5MjxB
      OrO+hcA2Ev/wD/9Af38/hw8fZnR0lMHBQZ5++ukbs/EXJJNJDh06xM6dO2952T/44AN6e3s5
      fPjwY+OQW/GjHPFOcnh+nuLaLShyEE2SsdtlDMYkgtnB+IWzeAUre+qBtEJocZCRpJP2xkIu
      njlKMKnRUFbP+TOfE0+JtNznwExWB4bbVlImmxMlFCGVjKA4y9ii+EnebrQSDbS2tTJwbYhR
      uZSGrV0szvnQABGBmuZtlJXkY7GYEdIDDE/MUNBed5+jezL5d//u3+Hz+RgZGeHYsWNEo1Hi
      8Thut5v/+l//K9/85jc5ceIEFouF3t5eZmdn2b17Nx999BGSJPHHf/zHGI1GDh8+jM32eARG
      rrofIB3xcrqnD6unkqZiEz29gzhLatnSUMF9WeZ1jaWFWQRLHmIySCSrUFGSj29+BsGSRyay
      BIoFl8tONh3j0oUry46wvBJqCiwkMVGSZ2FmzovNmYdVEZCsFoJzMyR0BY/byvzCEp6Scmym
      L/c2T2JG2N0wPv19DDu+d9fzNE3j6tWrtLe3P5CcDe8HyHE9I+zqz7EQXzOZmqoirnXFtJtk
      yhU7kYof7KW+H3IK8BgQj8dRVXVNN3KbwSu7HjI3TXHc1SaeyqCLt9ZbsZoNSA8YXpFj45JT
      gDvwH3549CvBcH/7b16l7B6rPud4fNiw4dC3m96uH0S77ZiaDLMUvr/iVt6pQfpGZ9E07c5y
      VkDTNA4dOsS7775LOBzm9OnT/OQnPyFxvbhWJBLhhz/8IZcuXWJ4eJi/+7u/Y3h4mFgsxo9+
      9COuXLlyX+PM8ejZsAoQDyzw+YmT+MMJQr4FZhZ8xJcmOHrqAv5wDO/8NLOLAbIxP3P+2E1X
      aoR8XqamZ8moKvFYFO9SgHgkwNTMPIl4hEsD4+S7DEyOz3Gl5wTXhmbI3sOYdF1ny5YtdHV1
      cebMGQYHB2lvb6e3txcAr9fLm2++ycDAAA6Hg9/5nd/h+PHjfPLJJzz77LP33Vk9x6NnwyrA
      F6hpP1euTRGa7GM8eP01VbMM9F7g01998lVHGGkGB8ZIhJYYmpzi/IlTxFIxensHSQbnGZhY
      QFEMCIJOInl/Mf+SJOH1ejl48CA1NTVks1kOHDhAYeFyYnt1dTWnT59m27ZtGAwGfvSjH1Fa
      WorX6+XDDz/k008/3fTBhhuNDasAZpsTi8mALIIoyRhlCaPNicWooGZiGJzltFW6v+oIYzmd
      0mCQl8s0ltdSXZwHgoTRoCAaLBQWFVHotiMIEi6XC4Nyb1uhVCpFKpWiq6uLy5cvI0kSO3bs
      YHx8nGAwyGeffYbZbMZgMDA7O8vevXuZmpqitraWrq6uG3m/OTYOG3YTLCpGKos9ZEUXjTUa
      4WwJ1cX52NQYKHbKihJQXkZ+voO8VJzjR47cyAgT0klUJZ+GyhJSiTRIZra0VDHnT9BcVUwm
      6QQMVFQWYZBUpmZ895QSqSjKjcjCl19+mdnZWRYXF2lsbOTkyZM0NzczNjaG1+ulpKSE4eFh
      Xn31VZxOJz09PTz//PO5iNsNxhPoB9DJZjXkB4xIjcfj/Md/PMJ88Na+Xf/7//A8xXl3du9r
      mvZQob6bwSa/HjLv2xEWi8XIZu9lO/jkkkql0DRtTZPLs9nsmsbJbxaZd6wtdRu3jMZgMKz5
      j7IRUVMxjOKdmxYJihmE1d06rXWm1GaRqes6qqree0LMWv8gGxFVVUn+0/+4Yo8wy3ffQypq
      XVWZgiCs+XJkM8h8qFCIiYEeRufCVDU1IiSgprbk1hMyMQIpGfeKDfR0pvovMjC9QF3Hfmo8
      j2ZJoSYjBDMy+favv39k0YtS6FnVbvCnTp2iubn5RseUV199FUVROH36NBcuXCAvL4+dO3fy
      2WefsX//fux2OwcOHOCNN97A5XrwHgY5Vo87K4AWw5+w8uwznUCcwx8fY3Jmim3bmognNCxq
      mPmlWS6OhvjG7m7iCyNEdCsN5W6u9A1R2dxBhccOspHamgrI3v8+Ox5YoGdggrYtW5EyUeKq
      jEMIc27ET3trI1ri/2/vTKKjOLc7/uuhela3Wt2tlkATmkAIJMQkQLYJyck7frbPO3E8r3K8
      yirLrPI2OSfLrLPJi3ccO/bJxgcfGeMHxiBhkIUQSEJCU2voST1PVd3V3VVZ6D2BsWQjwEaG
      /q1KXaq+n0p16xvu/94vTVFrppoEgYztvgOoKulEFLGsx11tJhKJYXW4SSwvY/W4yMejlHRm
      nBaBtWgcu8uD1bj9ns/v93P16lUMBgPLy8vs37+fsbExjh8/Tn9/P729vVy6dAmr1coHH3zA
      p59+is1m480332RwcJD33nsPzXNSTfu3zBY9gAoPqPed3mZ2WTUkpAxSSgU5gr2uhR6nGacm
      xdhSEIvFQtxupAQUCjIoCpJcJpoUqXH7KdZ1IGzj/62Uy8hygYIUY256FbtQIOaqQ5ZlSrLM
      9K3rLARkXv39Q8ncZYnvhodxNO6nSrBxY+hbFEcLfTUGpGSQ785fRNaY6T3QyuJqgv5Tzm07
      QKlUYnx8nIGBASyW9VTMr7/+mqampo3fmZ2dpbW1FZvNxtmzZ2lsbMTlcvHxxx+Ty+VQVbXi
      ADuAzWdzWivVhjSXvrnMQjCFrcqGwWjEaDQR9k1xZyGEzmgmOD1KVBZwWEyYrA5MBj0UZbLS
      eoRVTMcpyhKxZIHtZcOAxe7EUWXDJGjQChaqLAKC1YndZkWjSBgdjXQ12JE2ywg70I0UXmIh
      HKOj5ygOvUqZ9fH97rYDvPLScep3NbPHa8O3Etz2Tcvn8wQCAT7//HPGxsY4fPgwzc3NtLe3
      k06nURSFhYUF2tvbCQQCnDlzBr/fT0tLC6dOnaKpqekndy+v8Ouxc+MAqkJo1YfGVotWipIq
      Gmlr8hJaWURr81BIhtAYbLjdToqFHHduTW5khDU6dIhYaKq1sbgUxOGqpUrQoLfbiC77yCkG
      dnuqWF4JUd/cisNyf2L2cxlhD06CU6kUer2ee/fuoaoqXV1dnD9/njfeeIN4PE5tbS1+v5/J
      yUn279+PRqNhZmaGgYEBjMb7c6cXYU3+WdisJMQ8BqIokv2/f8acXdz0vOXt/0Hn2bwM+V/L
      m293Ne1FeBifhc2KAzwGlYyw58fmozjAlgPRhfn5Lc4UWJhfXTegKCwubv6m/C1TVlTKFdHa
      C8GWcQBZXtfCiPEAoxNz7GrrxqlJMTnnQ2PZjW15lruLAczVXoTZSZZieXq6W1j2BdFbbWTX
      /Ogcu+npatm5ktMt+Lf/vsjfHd/LP76y3WIuFX5r/OyzmU6nUFSZezM+/NEMJ146icusIZwu
      curUAHZNkrG7C+SzSeKJKCnZQnujG7lYplTIo/zCA6xyPkM8sz1dfyywwLQv9Ei/m8/nGRoa
      olgsksvluHr16g80/YVCgStXrlAqlfjiiy+4du0aMzMzfPTRR5w9e5b8NnMOKvy6bOkA6bUl
      Lg/fIJnNo9EK2KwmzJoCw0M3yCl6DMUUQ9euUxBqqK+xoTeYMZlMeOs86NCg02nI56XHdgAp
      FeX696OkxQLZVJxoIk0+scq1mxNkcnmS8QjRZIZSLoY/9mAVMoVsOslaEi0fMwAACYdJREFU
      JEZJUShIEslUhoKYYS0ap5AXmbi3hNsp4FsIMH1nhIWlNTZX/qwHvFKpFPl8Hr/fTzgc3nAA
      VVUZGhpiZGSEiYkJ3G43kUiE6upq3n//fWw2W0X+vMPZcgh0/PSrG8f7Hvj8flJfK/fXQjo3
      jrx/vf7Uy0/UsJKcJ5PJkMtEmJ9ZwaaXMbi9ZDJpJEni3s1hFkNFXn316ENXykyO38ViFYjl
      skRn71HX0UncH8Bq0RM0VSOXihTkIpIkIolZ8mRQqGWzR7WtrY1wOLz+V3Z2srS0tHEuGo2i
      0+nYtWsXdXV1fPbZZxgMBux2+0ZOQEVftbPZsdJPq8OFqyaGzaRFb7LjsmSQrDXUOFUETQGj
      s5FObRhxk4wwk82Ou8ZAvFzGvbuVjkY334VieGpshIoWGhoa2e2pJhPN4/F4UY3OLbvCTCZD
      NBolGo2iKAqxWIxoNIrNZiMUCnHnzh3Gx8cRBIG+vj7C4TDxeJyJiQnOnDnzi96jCk/OjnUA
      rWDE67CQKVWxp14iUXSwd5eLgJwkr5rxVJuh9iCemhqqH8oIUzIJEpZddHY0k8/lQWelu6OO
      5YjIvvZ6ZMkOCOxuqMWoKzLvW0PZXbNpDxAIBFBVlcXFRXK5HGazmZmZGSKRCK+//joHDx7E
      7/fj9XoZGhpiz5491NevCwcrG9btfJ7DOICKLJcwGB5v6CGKIn/805/5myOd/GFg84CXqqoU
      CgWMRuNT0fO8CGvyz8JmJRD2GFQCYc+PzW07QDKZ3Fj/f1EpFosoivIDrc4vzU7cPO55sako
      yk8KDys9wEP8lBjO9Lv/QOj+h6du80V4Gz8Lm08khSiKCW5+P0okLRGPxX6RBv6WuXfvHsHg
      upT67t27RCIRYP2mj4yMcOHCBRRFYXh4mMuXL5PL5fjkk08YHBx8ls2u8BCbO4Ba4tb4DG37
      OjFqwedbpFiQiMXiFIplpGyaRCqDUi4Rj8UQC0UCiz5kVSGViJOTnnwYpZSKRGLxH35YlFhL
      ZH7wkRxfYnL55x10ZewWT8uNs9ksX331FfPz86RSKc6fP7+hiVpcXCQcDnPkyBGmpqYQRZGe
      nh4CgQAtLS288sorT6kVFZ4Gmy+DlrMItnoctvsTwVRokT9fHaW+ux9ldQJ9XQfdtVou3Fzm
      xMlTpGNxFF2BQESivqEZ6xNuPJcIzHNpZIrD/QNkVmZIFQVad1m4dnuZo8f6yYXnSBctHOqs
      Rnkw3FwucGt0lLy+moPtHsbHp7B6W6kulynLErdv30LSVNFSb2VmdpW2A33sdm1vO5/R0VFO
      njyJJEmMjIxw+vTpjQ3G19bWmJ2dJRKJ4HQ6CQQCBAIBenp6GB4eZnV1lbfffvuJ7k2Fp8fm
      PYDORikbJJ5MksqsVz6OJLIcOdpHWZbYe7CXsphANtbS0+4l4F+PlOYLRby7GnD+TIL6o+D0
      NtN76BDNziKqvZ0TbTYSGg8H+47Q5DaRyUrEl+8RLzx0oUaLTquhKOaIp1LIpRKLswuUgHRs
      lcWVGFI2QbGsBRRy4vYqSwMsLCzw5Zdf8s0337C8vMy5c+e4ceMGoiji8Xg4dOgQXq8Xo9FI
      X18fVVVVlEol3n33XRKJBOXyVsKLCr82m/cAGj29h7qYmvbR0L6XPa2tGJBZ8CfY39FIKRnE
      XddEtd1AKKClra0BY7mArdrG/NQUCV0zNsuT1V/Q6HWkQ0ssmfajJu9yLWLg2Il2Jkdv4NO2
      odNqqan1YjSYsKolZqenKQMGiw2tVotGq0Gv06PVCtR6nJirjJicXjw1K2jMVvQ6DRp4rHX8
      Dz/8EFEUEUURt9tNNpsln89z7tw53nrrLWKxGGazmePHjzM8PExTUxN79+7l4sWLnD59uqIP
      2kE8F6tAalkmEomjAHqjBbfT/tjfJYoi2f/9J8zpuR+dM/39vyPs/8Om1ymKQqFQeKzo74uw
      IvMsbFYCYY9BJRD2/Nh8soywqVGuj94mJ1fGqxWeX7Z0gIJq4mBHPeO3JiiXZCJra0hyiXwu
      QySyRiqVJJbMIKWihGJpcpkka2sRimWFbCpBNJFGVRVSiSjJjEi5mCccXiNf3PnFd//4p0tI
      hU1kphWeO7ZUg2q0Wix2D2bDKr67t0lrzIhLQexqmrLRSCKpouo0HGn1kkNlYWIMu8lAWNpL
      dtWHWSix5qhj8uZ1yno7Bzq8LIZFTpw8iekRN6R4VpTK9/OB79y5Qzgc5vTp0wiCQDKZ5Ntv
      v2VgYACXy4XP50MQBIxGI0NDQ/T391NXV/cMW19hO2wdCS5IREMr5MsCpZKKu7YWjVLCUuWm
      Y28nTY1N1LvuTzZrvI0c6GyiXCojmOzU2M3kcnkaOno4daKP+oZWWlwmVkKRR2qYUioSjSce
      apRE5OFAWGKZuyvbC3HdvnGZyQUfwUCMdDJGQd48AT6Xy3H79m3MZjOTk5MAXLhwgd7eXi5f
      vowoigwODjI9PU0wGKSvr48rV65sqy0Vni1bvoqddjOhRJ5DPV0IisTsrI993d0Y1SJGwUSd
      14Si2DAJOurQoVSZwKSlzWxENMgkiw6O7K1jZX4OqQg1dg2YHLQ3PtrbMRGY5+LIFIf7XyK3
      OkOyaKC13sTwXwJhYniOVMlKX4eDUvnBebzMnRs3SYgyHb29pJbnyeursKppAvE8e1p2Me0L
      0e1uoVSUGLs+giw08PLfHvtR4VyTyYQkSVy/fp133nkHgIaGBgYHB0mlUrhcLo4dO4YoinR2
      djI0NMTRow9nqFXYyWzpAA2tXTRs/GSj68CBvxyvPyZ6q7BxLACY1tWTVQJUNbZupEY2t99P
      qDzocD9yw9YDYQaanTJ3Um30V8eYybs42FdLk8fEjXmJ+JqfWNNDtUFR0Fo99Hc5mQ0FKcg6
      ers83JxQGTi0m/FAgYM9PXS1epm+G6JtXzd2dyubaT9TqRQOh4O+vj58Ph9er5fu7m4aGhoY
      GhrC5/MRDAaRZZlCoUBbW1tl+PMbY8cOxjV6HamgjyVTN0piiuE1gWMn25gcuYFP045Wq6Xa
      7cYgGLEoJRbn5tYDYVYTcf8816Jm9vX2UhCy6A1V2DXTXBkN0dl7mGJGBbSYzUbM+hJj39+i
      //TRH/UANTU17Nmzh0AgwMmTJxkcHKSvr4+RkRFee+017Hb7uno0k2Fubo7h4WGam5t5+eUn
      y4eu8OvxXMQB1LJMMLi2HggzmaCkoa7O9VjfJYoi//pfX/Gf//I65geqRv+SeQIvwpr8s7D5
      KHGA/wdOu3x/iKInCAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
